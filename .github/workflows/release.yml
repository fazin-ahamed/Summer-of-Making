name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Generate changelog
        id: changelog
        run: |
          # Generate changelog from git commits
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%an)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: AutoOrganize ${{ steps.get_version.outputs.version }}
          body: |
            ## Changes in ${{ steps.get_version.outputs.version }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Downloads
            
            ### Desktop Applications
            - Windows: `AutoOrganize-${{ steps.get_version.outputs.version }}-win.exe`
            - macOS: `AutoOrganize-${{ steps.get_version.outputs.version }}-mac.dmg`
            - Linux: `AutoOrganize-${{ steps.get_version.outputs.version }}-linux.AppImage`
            
            ### Mobile Applications
            - Android APK: `AutoOrganize-${{ steps.get_version.outputs.version }}-android.apk`
            - iOS IPA: Available on App Store
            
            ## Installation
            
            1. Download the appropriate file for your platform
            2. Install following the platform-specific instructions
            3. See the [User Guide](https://docs.autoorganize.com) for setup instructions
            
            ## What's New
            
            - Enhanced search performance
            - Improved mobile document scanning
            - Better graph visualization
            - Bug fixes and stability improvements
          draft: false
          prerelease: false

  build-desktop-release:
    name: Build Desktop Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            ext: AppImage
          - os: windows-latest
            platform: win
            ext: exe
          - os: macos-latest
            platform: mac
            ext: dmg
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsodium-dev
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Rust libraries
        run: cargo build --release
        working-directory: ./rust-core
      
      - name: Build and package desktop app
        run: |
          npm run build
          npm run package:${{ matrix.platform }}
        working-directory: ./apps/desktop
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./apps/desktop/build/AutoOrganize-${{ needs.create-release.outputs.version }}-${{ matrix.platform }}.${{ matrix.ext }}
          asset_name: AutoOrganize-${{ needs.create-release.outputs.version }}-${{ matrix.platform }}.${{ matrix.ext }}
          asset_content_type: application/octet-stream

  build-mobile-release:
    name: Build Mobile Release
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Setup Expo CLI
        run: npm install -g @expo/cli eas-cli
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Android APK
        run: |
          eas build --platform android --profile production
        working-directory: ./apps/mobile
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      
      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./apps/mobile/build/AutoOrganize-${{ needs.create-release.outputs.version }}-android.apk
          asset_name: AutoOrganize-${{ needs.create-release.outputs.version }}-android.apk
          asset_content_type: application/vnd.android.package-archive

  publish-docker:
    name: Publish Docker Images
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/api
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/api:${{ needs.create-release.outputs.version }}
            ghcr.io/${{ github.repository }}/api:latest
            autoorganize/api:${{ needs.create-release.outputs.version }}
            autoorganize/api:latest
          platforms: linux/amd64,linux/arm64

  notify-release:
    name: Notify Release
    needs: [build-desktop-release, build-mobile-release, publish-docker]
    runs-on: ubuntu-latest
    steps:
      - name: Notify Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "content": "ðŸš€ AutoOrganize ${{ needs.create-release.outputs.version }} has been released!",
              "embeds": [{
                "title": "New Release Available",
                "description": "AutoOrganize ${{ needs.create-release.outputs.version }} is now available for download",
                "color": 5814783,
                "fields": [
                  {
                    "name": "Desktop Apps",
                    "value": "Windows, macOS, and Linux builds available",
                    "inline": true
                  },
                  {
                    "name": "Mobile Apps", 
                    "value": "Android APK and iOS App Store",
                    "inline": true
                  },
                  {
                    "name": "Docker Images",
                    "value": "Updated container images published",
                    "inline": true
                  }
                ],
                "footer": {
                  "text": "Download from GitHub Releases"
                }
              }]
            }' \
            $DISCORD_WEBHOOK